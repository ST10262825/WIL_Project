@model List<TutorConnect.WebApp.Models.BookingDTO>
@{
    ViewData["Title"] = "My Sessions";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 style="color: #0B2E3D;">My Sessions</h2>
        <a href="/Tutor/Index" class="btn" style="background-color: #42E695; color: #0B2E3D; border-radius: 30px;">
            <i class="fas fa-plus me-2"></i>Book New Session
        </a>
    </div>

    <!-- Session filtering -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex flex-wrap gap-2">
                        <button class="btn btn-outline-primary active">All Sessions</button>
                        <button class="btn btn-outline-primary">Upcoming</button>
                        <button class="btn btn-outline-primary">Completed</button>
                        <button class="btn btn-outline-primary">Pending</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="card border-0 shadow-sm text-center py-5">
            <div style="height: 8px; background: linear-gradient(90deg, #42E695, #3BB2B8);"></div>
            <div class="card-body">
                <i class="fas fa-calendar-xmark" style="font-size: 3rem; color: #3BB2B8;"></i>
                <h4 class="mt-3" style="color: #0B2E3D;">No Sessions Yet</h4>
                <p class="text-muted">You haven't booked any sessions yet.</p>
                <a href="/Tutor/Index" class="btn" style="background-color: #0B2E3D; color: white; border-radius: 30px;">
                    Browse Tutors
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var booking in Model.OrderByDescending(b => b.StartTime))
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div style="height: 8px; background: linear-gradient(90deg, #42E695, #3BB2B8);"></div>
                        <div class="card-body">
                            <!-- Status Badge -->
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="badge @GetStatusBadgeClass(booking.Status)">
                                    @booking.Status
                                </span>
                                <small class="text-muted">#@booking.BookingId</small>
                            </div>

                            <!-- Tutor Info -->
                            <div class="d-flex align-items-center mb-3">
                                <div class="flex-shrink-0">
                                    <div class="rounded-circle d-flex align-items-center justify-content-center"
                                         style="width: 50px; height: 50px; background-color: #3BB2B8; color: white;">
                                        <i class="fas fa-user-graduate"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="mb-0" style="color: #0B2E3D;">@booking.TutorName</h6>
                                    <small class="text-muted">Tutor</small>
                                </div>
                            </div>

                            <!-- Booking Details -->
                            <div class="booking-details">
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="text-muted">Module:</span>
                                    <strong style="color: #0B2E3D;">@booking.ModuleName</strong>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <span class="text-muted">Date:</span>
                                    <strong>@booking.StartTime.ToString("MMM dd, yyyy")</strong>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <span class="text-muted">Time:</span>
                                    <strong>@booking.StartTime.ToString("hh:mm tt") - @booking.EndTime.ToString("h:mm tt")</strong>
                                </div>

                                @if (!string.IsNullOrEmpty(booking.Notes))
                                {
                                    <div class="mt-3">
                                        <small class="text-muted">Notes:</small>
                                        <p class="mb-0 small">@booking.Notes</p>
                                    </div>
                                }
                            </div>

                            <!-- Actions -->
                            <div class="mt-3 pt-3 border-top">
                                @if (booking.Status == "Pending")
                                {
                                    <div class="d-flex gap-2">
                                        <form asp-action="CancelBooking" method="post">
                                            <input type="hidden" name="bookingId" value="@booking.BookingId" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger w-100"
                                                    onclick="return confirm('Are you sure you want to cancel this booking?')">
                                                <i class="fas fa-times me-1"></i>Cancel
                                            </button>
                                        </form>
                                    </div>
                                }
                                else if (booking.Status == "Accepted")
                                {
                                    <div class="text-center">
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Confirmed
                                        </span>
                                        <small class="d-block text-muted mt-1">Session is confirmed</small>
                                    </div>
                                }
                                <a href="@Url.Action("Chat", "Tutor", new { tutorId = booking.TutorId })" class="btn btn-outline-secondary btn-sm mt-2">
                                    <i class="fas fa-comment me-1"></i> Message Tutor
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        // Auto-refresh page every 30 seconds to update statuses
        setInterval(() => {
            location.reload();
        }, 30000);
    </script>
}

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Accepted" => "bg-success",
            "Declined" => "bg-danger",
            "Completed" => "bg-info",
            _ => "bg-secondary"
        };
    }
}

<style>
    .booking-details {
        background-color: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        border-left: 4px solid #3BB2B8;
    }

    .card {
        transition: transform 0.2s ease-in-out;
    }

        .card:hover {
            transform: translateY(-2px);
        }

    .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
    }
</style>