@{
    var authToken = User.FindFirst("Token")?.Value ?? "";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0";
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        let currentUserId = parseInt('@currentUserId');
        let authToken = '@authToken';
        let selectedReceiverId = null;

        // Initialize SignalR connection with token from cookie claims
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub", { accessTokenFactory: () => authToken })
            .build();

        connection.on("ReceiveMessage", (senderId, message, sentAt) => {
            appendMessage(senderId, message, sentAt);
        });

        async function sendMessage() {
            if (!selectedReceiverId) {
                alert("Please select a user to chat with.");
                return;
            }
            let message = document.getElementById("chatMessage").value;
            if (!message) return;

            await connection.invoke("SendMessage", currentUserId, parseInt(selectedReceiverId), message);
            document.getElementById("chatMessage").value = "";
        }

        function appendMessage(senderId, message, sentAt) {
            let chatWindow = document.getElementById("chatWindow");
            let div = document.createElement("div");
            div.style.marginBottom = "5px";

            let senderName = senderId === currentUserId ? "You" :
                document.querySelector(`#chatUserSelect option[value='${senderId}']`)?.text;
            div.textContent = `${senderName}: ${message} (${new Date(sentAt).toLocaleTimeString()})`;
            chatWindow.appendChild(div);
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }

        async function loadUsers() {
            const response = await fetch("/Chat/Inbox"); // Use your ChatController Inbox action
            const users = await response.json();
            const select = document.getElementById("chatUserSelect");
            select.innerHTML = ""; // clear any previous options

            users.forEach(u => {
                if (u.userId !== currentUserId) {
                    let option = document.createElement("option");
                    option.value = u.userId;
                    option.text = u.name;
                    select.add(option);
                }
            });

            select.addEventListener("change", async () => {
                selectedReceiverId = select.value;
                await loadMessages(selectedReceiverId);
            });

            if (select.options.length > 0) {
                select.selectedIndex = 0;
                selectedReceiverId = select.value;
                await loadMessages(selectedReceiverId);
            }
        }

        async function loadMessages(receiverId) {
            const response = await fetch(`/Chat/GetChatHistory?otherUserId=${receiverId}`);
            const messages = await response.json();
            const chatWindow = document.getElementById("chatWindow");
            chatWindow.innerHTML = "";
            messages.forEach(m => appendMessage(m.senderId, m.message, m.sentAt));
        }

        connection.start()
            .then(() => console.log("SignalR connected"))
            .catch(err => console.error("SignalR connection error: ", err));

        document.getElementById("sendBtn").addEventListener("click", sendMessage);

        // Load chat users on page load
        loadUsers();
    </script>
}
