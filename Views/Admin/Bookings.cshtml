@model List<TutorConnect.WebApp.Models.BookingDTO>
@{
    ViewData["Title"] = "Manage Bookings";
    var statusFilter = ViewBag.StatusFilter as string ?? "all";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Manage Bookings</h1>

        <!-- Status Filter -->
        <div class="btn-group">
            <a asp-action="Bookings" asp-route-status="all"
               class="btn @(statusFilter == "all" ? "btn-primary" : "btn-outline-primary")">All</a>
            <a asp-action="Bookings" asp-route-status="Pending"
               class="btn @(statusFilter == "Pending" ? "btn-warning" : "btn-outline-warning")">Pending</a>
            <a asp-action="Bookings" asp-route-status="Accepted"
               class="btn @(statusFilter == "Accepted" ? "btn-success" : "btn-outline-success")">Accepted</a>
            <a asp-action="Bookings" asp-route-status="Completed"
               class="btn @(statusFilter == "Completed" ? "btn-info" : "btn-outline-info")">Completed</a>
            <a asp-action="Bookings" asp-route-status="Cancelled"
               class="btn @(statusFilter == "Cancelled" ? "btn-danger" : "btn-outline-danger")">Cancelled</a>
            <a asp-action="Bookings" asp-route-status="Declined"
               class="btn @(statusFilter == "Declined" ? "btn-secondary" : "btn-outline-secondary")">Declined</a>
        </div>
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow">
        <div class="card-body">
            @if (Model == null || Model.Count == 0)
            {
                <div class="text-center py-4">
                    <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No bookings found.</p>
                    @if (!string.IsNullOrEmpty(statusFilter) && statusFilter != "all")
                    {
                        <p class="text-muted small">No bookings with status: @statusFilter</p>
                    }
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Tutor</th>
                                <th>Student</th>
                                <th>Module</th>
                                <th>Date & Time</th>
                                <th>Duration</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in Model)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(booking.TutorName))
                                        {
                                            @booking.TutorName
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(booking.StudentName))
                                        {
                                            @booking.StudentName
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(booking.ModuleName))
                                        {
                                            @booking.ModuleName
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (booking.StartTime != default)
                                        {
                                            <div>@booking.StartTime.ToString("yyyy-MM-dd")</div>
                                            <small class="text-muted">@booking.StartTime.ToString("HH:mm") - @booking.EndTime.ToString("HH:mm")</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (booking.StartTime != default && booking.EndTime != default)
                                        {
                                            var duration = booking.EndTime - booking.StartTime;
                                            <span>@duration.TotalHours.ToString("0.0") hours</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(booking.Status)">@booking.Status</span>
                                    </td>
                                    <td>
                                        @if (booking.Status == "Completed" || booking.Status == "Cancelled" || booking.Status == "Declined")
                                        {
                                            <form asp-action="DeleteBooking" method="post" class="d-inline delete-booking-form"
                                                  data-booking-id="@booking.BookingId">
                                                <input type="hidden" name="id" value="@booking.BookingId" />
                                                <button type="button" class="btn btn-sm btn-danger delete-booking-btn"
                                                        title="Delete Booking">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </form>
                                        }
                                        else if (booking.Status == "Pending")
                                        {
                                            <span class="text-muted">Cannot delete pending bookings</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No actions available</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteBookingModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Booking Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this booking?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Note:</strong> Only completed, cancelled, or declined bookings can be deleted.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteBookingForm" asp-action="DeleteBooking" method="post">
                    <input type="hidden" name="id" id="deleteBookingId" />
                    <button type="submit" class="btn btn-danger">Delete Booking</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-dismiss alerts
            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);

            // Delete booking confirmation modal
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteBookingModal'));
            const deleteForm = document.getElementById('deleteBookingForm');
            const deleteBookingId = document.getElementById('deleteBookingId');

            // Handle delete button clicks
            document.querySelectorAll('.delete-booking-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const form = this.closest('.delete-booking-form');
                    const bookingId = form.dataset.bookingId;

                    deleteBookingId.value = bookingId;
                    deleteModal.show();
                });
            });

            // Handle form submission
            deleteForm.addEventListener('submit', function() {
                // Show loading state
                const submitBtn = this.querySelector('button[type="submit"]');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
            });
        });
    </script>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Accepted" or "Confirmed" => "bg-success",
            "Completed" => "bg-info",
            "Cancelled" => "bg-danger",
            "Declined" => "bg-secondary",
            _ => "bg-secondary"
        };
    }
}